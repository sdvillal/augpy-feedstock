# Current release in pypi is kinda broken...
{% set commit="018c67df5537269f00826d2fa53dccd669fd59ce" %}
{% set version="1.0.0a2+git0" %}  # bump this each time we update the commit without changing target version

package:
  name: augpy
  version: {{ version }}

source:
  git_url: https://gitlab.com/jfolz/augpy.git
  git_rev: {{ commit }}
  git_depth: 1

build:
  number: 0
  skip: True  # [not linux or cuda_compiler_version not in ("10.1", "10.2")]
  script:
    # N.B. cub is in conda-forge, cnmem is not
    - "git submodule -q sync"
    - "git submodule -q update --init --recursive"
    - "{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv "

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - cmake
  host:
    - python >=3.7
    - pip
    - setuptools >=44.0.0
    - pybind11 >=2.4.3,<3.0.0
    - pybind11-stubgen >=0.3.0,<1.0.0
    - numpy >=1.17.5,<2.0.0
  run:
    - python >=3.7
    - numpy >=1.17.5,<2.0.0
    # N.B. this is debatable:
    #   - do we let the user choose a system-wide install?
    #   - or do we enforce the right CUDA version to be in the environment?
    # for the time being, let's enforce
    # (but we should provide an exit escape, e.g. a no-enforced-cuda package)
    - cudatoolkit {{ cuda_compiler_version }}|{{ cuda_compiler_version }}.*

test:
  imports:
    - augpy
    # to do something more meaningful we would need a CUDA capable CI instance

about:
  home: https://gitlab.com/jfolz/augpy
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: augpy is a lightweight library with minimal dependencies that provides a comprehensive tensor implementation for Cuda-enabled GPUs

extra:
  recipe-maintainers:
    - sdvillal
